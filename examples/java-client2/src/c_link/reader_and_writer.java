package c_link;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;

import c_link.size_t;

/**
 * <i>native declaration : fuzzy_log.h:5</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class reader_and_writer extends Structure {
	public Pointer reader;
	/** C type : ColorID* */
	public Pointer writer;

	public reader_and_writer() {
		super();
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("reader", "writer");
	}

	/** @param mycolors C type : ColorID* */
	public reader_and_writer(Pointer reader, Pointer writer) {
		super();
		this.reader = reader;
		this.writer = writer;
	}

	public reader_and_writer(Pointer peer) {
		super(peer);
	}

	// public static class ByReference extends reader_and_writer implements Structure.ByReference {

	// };

	public static class ByValue extends reader_and_writer implements Structure.ByValue {

	};
}
