package c_link;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

import c_link.size_t;

/**
 * <i>native declaration : fuzzy_log.h:19</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class write_locations extends Structure {
	public size_t num_locs;
	/** C type : fuzzy_log_location* */
	public c_link.fuzzy_log_location.ByReference locs;

	public write_locations() {
		super();
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("num_locs", "locs");
	}

	/** @param locs C type : fuzzy_log_location* */
	public write_locations(size_t num_locs, c_link.fuzzy_log_location.ByReference locs) {
		super();
		this.num_locs = num_locs;
		this.locs = locs;
	}

	public write_locations(Pointer peer) {
		super(peer);
	}

	public static class ByReference extends write_locations implements Structure.ByReference {

	};

	public static class ByValue extends write_locations implements Structure.ByValue {

	};
}
